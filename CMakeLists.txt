cmake_minimum_required(VERSION 3.13.4 FATAL_ERROR)
project("Producer Consumer++" LANGUAGES CXX)
IF(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)
    SET(CMAKE_INSTALL_PREFIX ${CMAKE_SOURCE_DIR} CACHE PATH "" FORCE)
ENDIF(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)

set(default_build_type "Release")
IF(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)
    message(STATUS "Setting build type to '${default_build_type}' as none was specified.")
    set(CMAKE_BUILD_TYPE "${default_build_type}" CACHE STRING "Choose the type of build." FORCE)
    set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS "Debug" "Release")
ENDIF(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

IF("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU")
    add_compile_options("-march=native" "-Wall" "-pedantic")
    set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -Og -pg")
ELSEIF("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang")
    add_compile_options("-march=native" "-Wall" "-pedantic")
    set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -O0")
ELSEIF(MSVC)
    add_compile_options("/Wall")
    set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} /O2")
    set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} /Od /Z7")
ENDIF("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU")

add_executable(pc-plus-plus src/main.cpp src/producer.cpp src/consumer.cpp src/thread_manager.cpp)
find_package(Threads REQUIRED)
target_link_libraries(pc-plus-plus "${CMAKE_THREAD_LIBS_INIT}")
include_directories(PUBLIC "${CMAKE_SOURCE_DIR}/src/include/")

install(TARGETS pc-plus-plus DESTINATION ${CMAKE_SOURCE_DIR})
